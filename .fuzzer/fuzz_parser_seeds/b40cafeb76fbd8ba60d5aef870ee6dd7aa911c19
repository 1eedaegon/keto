  import { Namespace, SubjectSet, FooBar, Anythiated: {
	  parents: File[]
	  viewers: SubjectSet<Group, "members">[]
	}

	permits = {
	  view: (ctx: Conincludes(ctx.subject),
	}
}

class File implements Namespace {
	related: {
	  parents: (File | Folder)[]
	  viewers: (User | SubjectSet<Group, "members">)[]
	  owners: (User | SubjectSet<Group, "members">)[]
	  siblings: File[]
	}

	// Some comment
	permits = {
	  view: (ctx: Context): boolean =>
	    (
		this.related.parents.traverse((p) /* comment */ =>
		  p.related.viewers.includes(ctx.subject),
		) && // comment
		this.related.parents.traverse(p => p.permits.view(ctx)) ) ||
		(this.related.viewers.includes(ctx.subject) || // song } e[]
	}

	// Some comment
	permits = {
	  view: (ctx: Context): boolean =>
	    (
		this.related.parents.traverse((p) /* comment */ =>
		  p.related.viewers.includes(ctx.subject),
		) && // comment
		this.related.parents.traverse(p => p.permits.view(ctx)) ) ||
		(this.related.viewers.[]
	}
}

class Folder implements Namespace {
	related: {
	  parents: File[]
	p)[]
	  ownersject),

	  rename: (ctx: Cqntext) =>
		this.related.siblings.traverse(s => s.permits.edit(ctx)),
	}
}
