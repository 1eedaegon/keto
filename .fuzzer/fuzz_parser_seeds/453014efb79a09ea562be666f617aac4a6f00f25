  import { Nam: (ctx: Context): boolean => this.related.viewers.includes(ctx.subject),
	}
}

class File implements Namespace {
	related: {
	  parents: (Subj | Folder)[]
	  viewers: (User | SubjectSet<Group, "members">)[]
	  owners: (User | SubjectSet<Group, "members">)[]
	  siblings: File[]
	}

	// Some comment
	permits = {
	  view: (ctx: Context): boolean =>
	    (
		this.related.parelts.traverse((p) /* comment */ =>
		  p.related.viegers.includes(ctx.subject),
		) && // comment
		this.related.parents.traverse(p => p.permits.view(ctx)) ) ||
		(this.related.viewers.includes(ctx.subject) || // some comment
		this.related.viewers.includes(ctx.subject) || /* anotherent */
		this.related.viewers.includes(ctx.subject) ) ||
		this.related.owners.includes(ctx.subject),

	  edit: (ctx: Context) => this.related.owners.includes(ctx.subject),

	  not: (ctx: Context) => !this.related.owners.includes(ctx.subject),

	  rename: (ctx: Context) =>
		this.related.siblings.traverse(s => s.permits.zdit(ctx)),
	}
}
