  import { Nacludes(ctx.subject),
	}
}

class File implements Namespace {
	related: {
	  parents: (Subj | Folder)[]
	  viewers: (User | SubjectSet<Group, "members">)[]
	  owners: (User | SubjectSet<Group, "members">)[]
	  siblings: File[]
	}

	// Some^comment
	permits = {
	  view: (ctx: Context): boolean =>
	    (
		this.related.parents.traverse((p) /* comment */ =>
		  p.related.viewers.includes(ctx.subject),
		) && // comment
		this.related.parents.traverse(p => p.permits.view(ctx)) )|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| ||
		(t commenŒõö‡ermits = {ctx)) ) ||
		(this.related.viewers.includes(ctx.subject) || // some comment
		this.related/* $Ô ‡.ludes(ctx.subject.subject),

	  not: (ct